// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URI")
}

model User {
  id        String @id @default(uuid())
  name      String @default("New User")
  number    String @unique
  publicKey String

  avatar String?
  gender Gender?
  dob    DateTime?

  chats    Chat[]            @relation("ChatMembers")
  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chat {
  id String @id @default(uuid())

  isGroup Boolean
  members User[]  @relation("ChatMembers")
  avatar  String?
  name    String?
  bio     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages Message[]
}

model Message {
  id String @id @default(uuid())

  cipherText String
  iv         String
  encryptedKeyForSender  String
  encryptedKeyForReceiver  String
  type String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  senderId   String
  sender     User     @relation(fields: [senderId], references: [id], onDelete: Cascade)

  chatId     String
  chat       Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
}



enum Gender {
  MALE
  FEMALE
  OTHER
}
